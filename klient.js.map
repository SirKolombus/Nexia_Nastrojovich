{"version":3,"file":"klient.js","mappings":"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","sources":["webpack://nexia-nastrojovich/./src/shared/utils.js","webpack://nexia-nastrojovich/./src/klient/klient.js"],"sourcesContent":["/* Shared Utility Functions for Nástrojovič */\n\n/**\n * Show notification to user\n * @param {string} message - Message to display\n * @param {string} type - Type: 'success', 'error', 'info', 'warning'\n */\nexport function showNotification(message, type = 'info') {\n  console.log(`[${type.toUpperCase()}] ${message}`);\n  \n  // Create notification element if it doesn't exist\n  let notification = document.getElementById('notification');\n  if (!notification) {\n    notification = document.createElement('div');\n    notification.id = 'notification';\n    notification.className = 'notification';\n    document.body.appendChild(notification);\n  }\n  \n  // Set notification style based on type\n  notification.className = `notification notification-${type}`;\n  notification.textContent = message;\n  notification.classList.remove('hidden');\n  \n  // Auto-hide after 4 seconds\n  setTimeout(() => {\n    notification.classList.add('hidden');\n  }, 4000);\n}\n\n/**\n * Navigate back to launcher\n */\nexport function navigateToLauncher() {\n  const baseUrl = window.location.origin + '/';\n  window.location.href = baseUrl + 'launcher.html';\n}\n\n/**\n * Format number with Czech locale\n * @param {number} value - Number to format\n * @param {number} decimals - Number of decimal places\n * @returns {string} Formatted number\n */\nexport function formatNumber(value, decimals = 0) {\n  return new Intl.NumberFormat('cs-CZ', {\n    minimumFractionDigits: decimals,\n    maximumFractionDigits: decimals\n  }).format(value);\n}\n\n/**\n * Parse Czech formatted number\n * @param {string} str - String to parse\n * @returns {number} Parsed number\n */\nexport function parseNumber(str) {\n  if (typeof str === 'number') return str;\n  return parseFloat(str.replace(/\\s/g, '').replace(',', '.'));\n}\n\n/**\n * Validate required field\n * @param {string} value - Value to validate\n * @param {string} fieldName - Field name for error message\n * @returns {boolean} True if valid\n */\nexport function validateRequired(value, fieldName) {\n  if (!value || value.trim() === '') {\n    showNotification(`Pole \"${fieldName}\" je povinné`, 'error');\n    return false;\n  }\n  return true;\n}\n\n/**\n * Sleep for specified milliseconds\n * @param {number} ms - Milliseconds to sleep\n * @returns {Promise}\n */\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","/**\n * Restart the tool - clear all data and reset to initial state\n */\nfunction restartTool() {\n  // Clear year data store\n  yearDataStore = {\n    y3: null,\n    y2: null,\n    y1: null,\n    y0: null\n  };\n  // Clear evaluation results\n  evaluationResults = null;\n  selectedStartCell = null;\n  // Reset accounting period to current year\n  const currentYear = new Date().getFullYear();\n  document.getElementById(\"accounting-period-start\").value = `${currentYear}-01-01`;\n  // Clear unit info fields\n  document.getElementById(\"unit-name\").value = \"\";\n  document.getElementById(\"unit-ico\").value = \"\";\n  document.getElementById(\"unit-type\").value = \"\";\n  // Update year labels\n  updateYearLabels();\n  // Update button states\n  updateButtonStates();\n  // Hide data summary\n  document.getElementById(\"data-summary\").classList.add(\"hidden\");\n  // Hide results section\n  document.getElementById(\"results-section\").classList.add(\"hidden\");\n  // Hide print section\n  document.getElementById(\"print-section\").classList.add(\"hidden\");\n  // Hide print preview\n  document.getElementById(\"print-preview\").classList.add(\"hidden\");\n  showNotification(\"Kontrola byla restartována\", \"success\");\n}\n/* global Office, Excel */\n\nimport { showNotification, formatNumber } from '../shared/utils.js';\n\nlet evaluationResults = null;\nlet yearDataStore = {\n  y3: null,\n  y2: null,\n  y1: null,\n  y0: null\n};\nlet currentEditingYear = null;\nlet selectedStartCell = null; // Store the selected cell for printing\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").classList.remove(\"hidden\");\n    \n    // Initialize\n    initialize();\n  }\n});\n\n/**\n * Initialize the Klient tool\n */\nfunction initialize() {\n  // Back to launcher button\n  document.getElementById(\"btn-back-launcher\").onclick = () => {\n    window.location.href = 'launcher.html';\n  };\n  // Restart button\n  document.getElementById(\"btn-restart\").onclick = restartTool;\n  \n  // Evaluate button\n  document.getElementById(\"btn-evaluate\").onclick = evaluateData;\n  \n  // Select cell button\n  document.getElementById(\"btn-select-cell\").onclick = selectCellForPrint;\n  \n  // Print button\n  document.getElementById(\"btn-print\").onclick = printParameters;\n  \n  // Update year labels when period start changes\n  const periodInput = document.getElementById(\"accounting-period-start\");\n  if (periodInput) {\n    periodInput.addEventListener('change', updateYearLabels);\n    // Set default to current year 1.1.\n    const currentYear = new Date().getFullYear();\n    if (!periodInput.value) {\n      periodInput.value = `${currentYear}-01-01`;\n    }\n    updateYearLabels();\n  }\n  \n  // Year button handlers\n  document.getElementById(\"btn-year-3\").onclick = () => openYearModal('y3');\n  document.getElementById(\"btn-year-2\").onclick = () => openYearModal('y2');\n  document.getElementById(\"btn-year-1\").onclick = () => openYearModal('y1');\n  document.getElementById(\"btn-year-0\").onclick = () => openYearModal('y0');\n  \n  // Modal handlers\n  document.getElementById(\"modal-close\").onclick = closeYearModal;\n  document.getElementById(\"modal-cancel\").onclick = closeYearModal;\n  document.getElementById(\"modal-save\").onclick = saveYearData;\n  \n  // Close modal on overlay click\n  document.getElementById(\"year-modal\").onclick = (e) => {\n    if (e.target.id === 'year-modal') {\n      closeYearModal();\n    }\n  };\n  \n  // Add automatic number formatting to numeric fields\n  setupNumberFormatting();\n}\n\n/**\n * Setup automatic number formatting for numeric input fields\n */\nfunction setupNumberFormatting() {\n  const numericFields = document.querySelectorAll('.formatted-number');\n  \n  numericFields.forEach(field => {\n    field.addEventListener('input', function(e) {\n      let value = e.target.value.replace(/\\s/g, ''); // Remove spaces\n      \n      // Only allow digits\n      value = value.replace(/\\D/g, '');\n      \n      // Format with thousand separators\n      if (value) {\n        e.target.value = formatNumberWithSpaces(parseInt(value));\n      } else {\n        e.target.value = '';\n      }\n    });\n    \n    field.addEventListener('blur', function(e) {\n      // Reformat on blur to ensure consistency\n      let value = e.target.value.replace(/\\s/g, '');\n      if (value && !isNaN(value)) {\n        e.target.value = formatNumberWithSpaces(parseInt(value));\n      }\n    });\n  });\n}\n\n/**\n * Format number with spaces as thousand separators (Czech format)\n */\nfunction formatNumberWithSpaces(num) {\n  return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n}\n\n/**\n * Format ISO date (yyyy-mm-dd) to Czech format d.m.yyyy\n */\nfunction formatDateCz(iso) {\n  if (!iso) return '';\n  const [y, m, d] = iso.split('-').map(v => parseInt(v, 10));\n  if (!y || !m || !d) return iso;\n  return `${d}.${m}.${y}`;\n}\n\n/**\n * Update year labels in the year buttons based on accounting period start\n */\nfunction updateYearLabels() {\n  const periodInput = document.getElementById(\"accounting-period-start\");\n  if (!periodInput || !periodInput.value) return;\n  \n  const [year, month, day] = periodInput.value.split('-').map(v => parseInt(v, 10));\n  if (!year) return;\n  \n  // Check if period starts on 1.1 (calendar year)\n  const isCalendarYear = (month === 1 && day === 1);\n  const prefix = isCalendarYear ? 'Rok ' : 'FY';\n  \n  document.getElementById(\"year-label-3\").textContent = `${prefix}${year - 3}`;\n  document.getElementById(\"year-label-2\").textContent = `${prefix}${year - 2}`;\n  document.getElementById(\"year-label-1\").textContent = `${prefix}${year - 1}`;\n  document.getElementById(\"year-label-0\").textContent = `${prefix}${year}`;\n  // Clear stored data when period changes\n  yearDataStore = { y3: null, y2: null, y1: null, y0: null };\n  updateButtonStates();\n  updateDataSummary();\n}\n\n/**\n * Open modal to enter year data\n */\nfunction openYearModal(yearKey) {\n  currentEditingYear = yearKey;\n  const periodInput = document.getElementById(\"accounting-period-start\");\n  if (!periodInput || !periodInput.value) {\n    showNotification(\"Nejprve vyplňte první den účetního období\", \"warning\");\n    return;\n  }\n  \n  const [year] = periodInput.value.split('-').map(v => parseInt(v, 10));\n  \n  let yearValue;\n  if (yearKey === 'y3') yearValue = year - 3;\n  else if (yearKey === 'y2') yearValue = year - 2;\n  else if (yearKey === 'y1') yearValue = year - 1;\n  else yearValue = year;\n  \n  document.getElementById(\"modal-year-title\").textContent = `Vyplnit údaje pro rok ${yearValue}`;\n  \n  // Load existing data if available\n  if (yearDataStore[yearKey]) {\n    const data = yearDataStore[yearKey];\n    document.getElementById(\"modal-aktiva\").value = data.aktiva ? formatNumberWithSpaces(data.aktiva) : '';\n    document.getElementById(\"modal-obrat\").value = data.obrat ? formatNumberWithSpaces(data.obrat) : '';\n    document.getElementById(\"modal-zamestnanci\").value = data.zamestnanci ? formatNumberWithSpaces(data.zamestnanci) : '';\n    document.getElementById(\"modal-zdroj\").value = data.zdroj || '';\n  } else {\n    // Clear fields\n    document.getElementById(\"modal-aktiva\").value = '';\n    document.getElementById(\"modal-obrat\").value = '';\n    document.getElementById(\"modal-zamestnanci\").value = '';\n    document.getElementById(\"modal-zdroj\").value = '';\n  }\n  \n  document.getElementById(\"year-modal\").classList.remove(\"hidden\");\n}\n\n/**\n * Close modal\n */\nfunction closeYearModal() {\n  document.getElementById(\"year-modal\").classList.add(\"hidden\");\n  currentEditingYear = null;\n}\n\n/**\n * Save year data from modal\n */\nfunction saveYearData() {\n  if (!currentEditingYear) return;\n  \n  // Parse formatted numbers (remove spaces)\n  const aktivaStr = document.getElementById(\"modal-aktiva\").value.replace(/\\s/g, '');\n  const obratStr = document.getElementById(\"modal-obrat\").value.replace(/\\s/g, '');\n  const zamestnanciStr = document.getElementById(\"modal-zamestnanci\").value.replace(/\\s/g, '');\n  \n  const aktiva = parseFloat(aktivaStr) || 0;\n  const obrat = parseFloat(obratStr) || 0;\n  const zamestnanci = parseFloat(zamestnanciStr) || 0;\n  const zdroj = document.getElementById(\"modal-zdroj\").value.trim();\n  \n  if (aktiva === 0 && obrat === 0 && zamestnanci === 0) {\n    showNotification(\"Prosím vyplňte alespoň jeden údaj\", \"warning\");\n    return;\n  }\n  \n  if (!zdroj) {\n    showNotification(\"Prosím vyplňte zdroj dat\", \"warning\");\n    return;\n  }\n  \n  yearDataStore[currentEditingYear] = {\n    aktiva: aktiva,\n    obrat: obrat,\n    zamestnanci: zamestnanci,\n    zdroj: zdroj\n  };\n  \n  updateButtonStates();\n  updateDataSummary();\n  closeYearModal();\n  \n  showNotification(\"Údaje byly úspěšně uloženy\", \"success\");\n}\n\n/**\n * Update button states based on stored data\n */\nfunction updateButtonStates() {\n  ['y3', 'y2', 'y1', 'y0'].forEach((yearKey, index) => {\n    const button = document.getElementById(`btn-year-${3 - index}`);\n    const status = document.getElementById(`year-status-${3 - index}`);\n    if (button && status) {\n      if (yearDataStore[yearKey]) {\n        button.classList.add('filled');\n        status.textContent = '✓ Vyplněno';\n      } else {\n        button.classList.remove('filled');\n        status.textContent = 'Nevyplněno';\n      }\n    }\n  });\n}\n\n/**\n * Update data summary display\n */\nfunction updateDataSummary() {\n  const periodInput = document.getElementById(\"accounting-period-start\");\n  if (!periodInput || !periodInput.value) return;\n  \n  const [year] = periodInput.value.split('-').map(v => parseInt(v, 10));\n  \n  const hasData = yearDataStore.y3 || yearDataStore.y2 || yearDataStore.y1 || yearDataStore.y0;\n  if (!hasData) {\n    document.getElementById(\"data-summary\").classList.add(\"hidden\");\n    return;\n  }\n  let summaryHtml = '';\n  [\n    { key: 'y3', year: year - 3 },\n    { key: 'y2', year: year - 2 },\n    { key: 'y1', year: year - 1 },\n    { key: 'y0', year: year }\n  ].forEach(({ key, year: yearNum }) => {\n    if (yearDataStore[key]) {\n      const data = yearDataStore[key];\n      summaryHtml += `\n        <div class=\"summary-item\">\n          <div class=\"summary-year\">Rok ${yearNum}:</div>\n          <div class=\"summary-values\">\n            Aktiva: ${formatNumber(data.aktiva, 0)} Kč | \n            Obrat: ${formatNumber(data.obrat, 0)} Kč | \n            Zaměstnanci: ${formatNumber(data.zamestnanci, 0)}<br>\n            <small><em>Zdroj: ${data.zdroj}</em></small>\n          </div>\n        </div>\n      `;\n    }\n  });\n  document.getElementById(\"summary-content\").innerHTML = summaryHtml;\n  document.getElementById(\"data-summary\").classList.remove(\"hidden\");\n}\n\n/**\n * Get form values\n */\nfunction getFormValues() {\n  const accountingPeriodStart = document.getElementById(\"accounting-period-start\").value;\n  const unitName = document.getElementById(\"unit-name\").value.trim();\n  const unitType = document.getElementById(\"unit-type\").value;\n  const unitICO = document.getElementById(\"unit-ico\").value.trim();\n  let year = new Date().getFullYear();\n  if (accountingPeriodStart) {\n    [year] = accountingPeriodStart.split('-').map(v => parseInt(v, 10));\n  }\n  const data = {\n    unitName,\n    unitType,\n    unitICO,\n    accountingPeriodStart: accountingPeriodStart,\n    years: {\n      y3: year - 3,\n      y2: year - 2,\n      y1: year - 1,\n      y0: year\n    },\n    aktiva: {\n      y3: yearDataStore.y3 ? yearDataStore.y3.aktiva : 0,\n      y2: yearDataStore.y2 ? yearDataStore.y2.aktiva : 0,\n      y1: yearDataStore.y1 ? yearDataStore.y1.aktiva : 0,\n      y0: yearDataStore.y0 ? yearDataStore.y0.aktiva : 0\n    },\n    obrat: {\n      y3: yearDataStore.y3 ? yearDataStore.y3.obrat : 0,\n      y2: yearDataStore.y2 ? yearDataStore.y2.obrat : 0,\n      y1: yearDataStore.y1 ? yearDataStore.y1.obrat : 0,\n      y0: yearDataStore.y0 ? yearDataStore.y0.obrat : 0\n    },\n    zamestnanci: {\n      y3: yearDataStore.y3 ? yearDataStore.y3.zamestnanci : 0,\n      y2: yearDataStore.y2 ? yearDataStore.y2.zamestnanci : 0,\n      y1: yearDataStore.y1 ? yearDataStore.y1.zamestnanci : 0,\n      y0: yearDataStore.y0 ? yearDataStore.y0.zamestnanci : 0\n    },\n    zdroje: {\n      y3: yearDataStore.y3 ? yearDataStore.y3.zdroj : '',\n      y2: yearDataStore.y2 ? yearDataStore.y2.zdroj : '',\n      y1: yearDataStore.y1 ? yearDataStore.y1.zdroj : '',\n      y0: yearDataStore.y0 ? yearDataStore.y0.zdroj : ''\n    }\n  };\n  return data;\n}\n\n/**\n * Validate form data\n */\nfunction validateData(data) {\n  if (!data.unitName || !data.unitType || !data.unitICO) {\n    showNotification(\"Vyplňte prosím název, typ a IČO účetní jednotky\", \"error\");\n    return false;\n  }\n  if (!data.accountingPeriodStart) {\n    showNotification(\"Prosím vyplňte první den účetního období\", \"error\");\n    return false;\n  }\n  \n  // Check if at least some data is filled\n  const hasData = yearDataStore.y3 || yearDataStore.y2 || yearDataStore.y1 || yearDataStore.y0;\n  \n  if (!hasData) {\n    showNotification(\"Prosím vyplňte údaje alespoň pro jeden rok\", \"error\");\n    return false;\n  }\n  \n  return true;\n}\n\n/**\n * Evaluate client data based on Czech accounting thresholds\n */\nfunction evaluateData() {\n  const data = getFormValues();\n  \n  if (!validateData(data)) {\n    return;\n  }\n  \n  // Thresholds according to Czech Accounting Act (Zákon o účetnictví)\n  // Two versions: before 31.12.2023 and from 1.1.2024\n  \n  const oldThresholds = {\n    micro: { aktiva: 9000, obrat: 18000, zamestnanci: 10 },\n    small: { aktiva: 100000, obrat: 200000, zamestnanci: 50 },\n    medium: { aktiva: 500000, obrat: 1000000, zamestnanci: 250 }\n  };\n  \n  const newThresholds = {\n    micro: { aktiva: 11000, obrat: 22000, zamestnanci: 10 },\n    small: { aktiva: 120000, obrat: 240000, zamestnanci: 50 },\n    medium: { aktiva: 600000, obrat: 1200000, zamestnanci: 250 }\n  };\n  \n  // Helper to classify one year's values into a category\n  function classifyOne(aktiva, obrat, zam, year) {\n    if (aktiva == null && obrat == null && zam == null) return null;\n    \n    // Select thresholds based on the year being evaluated\n    const thresholds = (year >= 2024) ? newThresholds : oldThresholds;\n    \n    // Inputs are in Kč; thresholds are in tis. Kč → convert\n    const aktTis = typeof aktiva === 'number' ? aktiva / 1000 : 0;\n    const obrTis = typeof obrat === 'number' ? obrat / 1000 : 0;\n    const zamVal = typeof zam === 'number' ? zam : 0;\n    \n    let exceeds; // count of criteria that EXCEED the threshold\n    \n    // Check if exceeds Micro thresholds (if exceeds < 2, it's Micro)\n    exceeds = 0;\n    if (aktTis >= thresholds.micro.aktiva) exceeds++;\n    if (obrTis >= thresholds.micro.obrat) exceeds++;\n    if (zamVal >= thresholds.micro.zamestnanci) exceeds++;\n    if (exceeds < 2) return \"Mikro účetní jednotka\";\n    \n    // Check if exceeds Small thresholds\n    exceeds = 0;\n    if (aktTis >= thresholds.small.aktiva) exceeds++;\n    if (obrTis >= thresholds.small.obrat) exceeds++;\n    if (zamVal >= thresholds.small.zamestnanci) exceeds++;\n    if (exceeds < 2) return \"Malá účetní jednotka\";\n    \n    // Check if exceeds Medium thresholds\n    exceeds = 0;\n    if (aktTis >= thresholds.medium.aktiva) exceeds++;\n    if (obrTis >= thresholds.medium.obrat) exceeds++;\n    if (zamVal >= thresholds.medium.zamestnanci) exceeds++;\n    if (exceeds < 2) return \"Střední účetní jednotka\";\n    \n    // Else large\n    return \"Velká účetní jednotka\";\n  }\n  \n  const categories = {\n    y3: yearDataStore.y3 ? classifyOne(data.aktiva.y3, data.obrat.y3, data.zamestnanci.y3, data.years.y3) : null,\n    y2: yearDataStore.y2 ? classifyOne(data.aktiva.y2, data.obrat.y2, data.zamestnanci.y2, data.years.y2) : null,\n    y1: yearDataStore.y1 ? classifyOne(data.aktiva.y1, data.obrat.y1, data.zamestnanci.y1, data.years.y1) : null,\n    y0: yearDataStore.y0 ? classifyOne(data.aktiva.y0, data.obrat.y0, data.zamestnanci.y0, data.years.y0) : null,\n  };\n  \n  // Determine which thresholds to display (based on first day of accounting period)\n  const periodStart = new Date(data.accountingPeriodStart);\n  const thresholdChangeDate = new Date('2024-01-01');\n  const useOldThresholds = periodStart < thresholdChangeDate;\n  \n  // Store results\n  evaluationResults = {\n    data: data,\n    categories: categories,\n    thresholdVersion: useOldThresholds ? 'do 31.12.2023' : 'od 1.1.2024',\n    thresholds: useOldThresholds ? oldThresholds : newThresholds\n  };\n  \n  // Display results\n  displayResults(evaluationResults);\n  \n  showNotification(\"Údaje byly úspěšně vyhodnoceny\", \"success\");\n}\n\n/**\n * Get official category for the current year based on the last two years' data\n */\nfunction getOfficialCategory(categories) {\n  // Zákonná logika: Pro kontrolovaný rok (Y0) se nejprve porovnávají Y2 a Y1.\n  // Pokud jsou stejné, použije se tato kategorie.\n  // Pokud ne, porovnají se Y3 a Y2. Pokud jsou stejné, použije se tato kategorie.\n  // Pokud ani zde není shoda, použije se nejstarší dostupný údaj (Y3, Y2, Y1, Y0).\n  const keys = ['y3', 'y2', 'y1', 'y0'];\n  const cats = keys.map(k => categories[k]).filter(Boolean);\n  if (cats.length === 0) return 'Nedostatek dat';\n  // Nejprve porovnej Y2 a Y1\n  if (categories.y2 && categories.y1 && categories.y2 === categories.y1) {\n    return categories.y1;\n  }\n  // Pokud ne, porovnej Y3 a Y2\n  if (categories.y3 && categories.y2 && categories.y3 === categories.y2) {\n    return categories.y2;\n  }\n  // Pokud ani zde není shoda, použij nejstarší dostupný údaj\n  for (let i = 0; i < keys.length; i++) {\n    if (categories[keys[i]]) {\n      return categories[keys[i]];\n    }\n  }\n  return 'Nedostatek dat';\n}\n\n/**\n * Evaluate audit obligation based on unit type and thresholds\n */\nfunction evaluateAuditObligation(data) {\n  // Limity pro audit\n  const auditLimitsOld = { aktiva: 40000000, obrat: 80000000, zamestnanci: 50 };\n  const auditLimitsNew = { aktiva: 120000000, obrat: 240000000, zamestnanci: 50 };\n  // Typy jednotek, které stačí splnit 1 kritérium\n  const oneCriteriaTypes = [\"Akciová společnost\", \"Svěřenský fond\"];\n  // Pro každý rok\n  const results = {};\n  [\"y3\", \"y2\", \"y1\", \"y0\"].forEach((key) => {\n    const year = data.years[key];\n    // Vyber správné limity\n    const limits = year >= 2026 ? auditLimitsNew : auditLimitsOld;\n    // Zjisti počet splněných kritérií\n    let count = 0;\n    if (data.aktiva[key] >= limits.aktiva) count++;\n    if (data.obrat[key] >= limits.obrat) count++;\n    if (data.zamestnanci[key] >= limits.zamestnanci) count++;\n    // Podle typu jednotky\n    if (oneCriteriaTypes.includes(data.unitType)) {\n      results[key] = count >= 1 ? \"ANO\" : \"NE\";\n    } else {\n      results[key] = count >= 2 ? \"ANO\" : \"NE\";\n    }\n  });\n  return results;\n}\n\n/**\n * Get official audit obligation for the controlled year (Y0) based on new logic\n * Returns \"ANO\" or \"NE\"\n */\nfunction getOfficialAuditObligation(auditObligation, categories, data) {\n  // NOVÁ LOGIKA: Pokud je oficiální kategorie \"Malá účetní jednotka\", povinnost auditu je vždy \"NE\"\n  const officialCategory = getOfficialCategory(categories);\n  if (officialCategory === \"Malá účetní jednotka\") {\n    return \"NE\";\n  }\n\n  // Pokud není výjimka, použij posloupnost\n  // Krok 1: Shoduje se Y0 a Y1?\n  if (auditObligation.y0 && auditObligation.y1 && auditObligation.y0 === auditObligation.y1) {\n    return auditObligation.y0;\n  }\n  // Krok 2: Shoduje se Y1 a Y2?\n  if (auditObligation.y1 && auditObligation.y2 && auditObligation.y1 === auditObligation.y2) {\n    return auditObligation.y1;\n  }\n  // Krok 3: Shoduje se Y2 a Y3?\n  if (auditObligation.y2 && auditObligation.y3 && auditObligation.y2 === auditObligation.y3) {\n    return auditObligation.y2;\n  }\n  // Krok 4: Pokud ani zde není shoda, použij hodnotu z Y3\n  if (auditObligation.y3) {\n    return auditObligation.y3;\n  }\n  // Fallback - pokud nejsou dostupná data, použij Y0\n  return auditObligation.y0 || \"Nedostatek dat\";\n}\n\n/**\n * Helper function to determine if unit was \"Malá\" from 1.1.2024 onwards\n */\nfunction getCategory2024OrLater(categories, data) {\n  // Najdeme první rok >= 2024\n  const keys = ['y3', 'y2', 'y1', 'y0'];\n  for (const key of keys) {\n    if (data.years[key] >= 2024 && categories[key]) {\n      return categories[key];\n    }\n  }\n  return null;\n}\n\n/**\n * Display evaluation results\n */\nfunction displayResults(results) {\n  const auditObligation = evaluateAuditObligation(results.data);\n  const officialAudit = getOfficialAuditObligation(auditObligation, results.categories, results.data);\n  \n  const html = `\n    <div class=\"result-item\">\n      <span class=\"result-label\">První den účetního období:</span>\n      <span class=\"result-value\">${formatDateCz(results.data.accountingPeriodStart)}</span>\n    </div>\n    <div class=\"result-item\">\n      <span class=\"result-label\">Použité limity:</span>\n      <span class=\"result-value\">${results.thresholdVersion}</span>\n    </div>\n    <div class=\"result-item\">\n      <span class=\"result-label\">Rok ${results.data.years.y3}:</span>\n      <span class=\"result-value result-success\">${results.categories.y3 ?? '—'}</span>\n      <span class=\"result-label ml-12\">Audit:</span>\n      <span class=\"result-value\">${auditObligation.y3}</span>\n    </div>\n    <div class=\"result-item\">\n      <span class=\"result-label\">Rok ${results.data.years.y2}:</span>\n      <span class=\"result-value result-success\">${results.categories.y2 ?? '—'}</span>\n      <span class=\"result-label ml-12\">Audit:</span>\n      <span class=\"result-value\">${auditObligation.y2}</span>\n    </div>\n    <div class=\"result-item\">\n      <span class=\"result-label\">Rok ${results.data.years.y1}:</span>\n      <span class=\"result-value result-success\">${results.categories.y1 ?? '—'}</span>\n      <span class=\"result-label ml-12\">Audit:</span>\n      <span class=\"result-value\">${auditObligation.y1}</span>\n    </div>\n    <div class=\"result-item\">\n      <span class=\"result-label\">Rok ${results.data.years.y0}:</span>\n      <span class=\"result-value result-success\">${results.categories.y0 ?? '—'}</span>\n      <span class=\"result-label ml-12\">Audit:</span>\n      <span class=\"result-value\">${auditObligation.y0}</span>\n    </div>\n        <div class=\"result-item result-official\">\n      <span class=\"result-label\">Pro kontrolovaný rok účetní jednotka je vnímána za:</span>\n      <span class=\"result-value result-success\">${getOfficialCategory(results.categories)}</span>\n    </div>\n    <div class=\"result-item result-official\">\n      <span class=\"result-label\">Pro kontrolovaný rok účetní jednotka je povinna k auditu?:</span>\n      <span class=\"result-value result-success\">${officialAudit}</span>\n    </div>\n  `;\n  \n  document.getElementById(\"results-content\").innerHTML = html;\n  document.getElementById(\"results-section\").classList.remove(\"hidden\");\n  document.getElementById(\"print-section\").classList.remove(\"hidden\");\n}\n\n/**\n * Select cell for printing parameters\n */\nasync function selectCellForPrint() {\n  if (!evaluationResults) {\n    showNotification(\"Nejprve vyhodnoťte údaje\", \"warning\");\n    return;\n  }\n  \n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load(\"address, rowIndex, columnIndex\");\n      await context.sync();\n      \n      selectedStartCell = {\n        address: range.address,\n        rowIndex: range.rowIndex,\n        columnIndex: range.columnIndex\n      };\n      \n      // Calculate end range dynamically based on actual parameters array\n      // Count rows: get actual parameters that would be generated\n      const parametersRowCount = 31;  // Actual count: 5 (unit info) + 26 (rest including official category)\n      const parametersColumnCount = 5;\n      const endRowIndex = selectedStartCell.rowIndex + parametersRowCount - 1;\n      const endColumnIndex = selectedStartCell.columnIndex + parametersColumnCount - 1;\n      \n      // Convert column index to letter\n      const startCol = getColumnLetter(selectedStartCell.columnIndex);\n      const endCol = getColumnLetter(endColumnIndex);\n      \n      const rangeText = `${startCol}${selectedStartCell.rowIndex + 1}:${endCol}${endRowIndex + 1}`;\n      \n      // Show preview\n      document.getElementById(\"print-range-text\").textContent = rangeText;\n      document.getElementById(\"print-preview\").classList.remove(\"hidden\");\n      \n      showNotification(\"Buňka vybrána: \" + selectedStartCell.address, \"success\");\n    });\n  } catch (error) {\n    console.error(\"Error selecting cell:\", error);\n    showNotification(\"Chyba při výběru buňky: \" + error.message, \"error\");\n  }\n}\n\n/**\n * Convert column index to Excel column letter\n */\nfunction getColumnLetter(columnIndex) {\n  let letter = '';\n  let index = columnIndex;\n  \n  while (index >= 0) {\n    letter = String.fromCharCode(65 + (index % 26)) + letter;\n    index = Math.floor(index / 26) - 1;\n  }\n  \n  return letter;\n}\n\n/**\n * Print parameters to Excel\n */\nasync function printParameters() {\n  if (!evaluationResults) {\n    showNotification(\"Nejprve vyhodnoťte údaje\", \"warning\");\n    return;\n  }\n  \n  if (!selectedStartCell) {\n    showNotification(\"Nejprve vyberte buňku pro tisk\", \"warning\");\n    return;\n  }\n  \n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      \n      const data = evaluationResults.data;\n      \n      // Evaluate audit obligation\n      const auditObligation = evaluateAuditObligation(data);\n      const officialAudit = getOfficialAuditObligation(auditObligation, evaluationResults.categories, data);\n      \n      // Prepare data for printing\n      const parameters = [\n        [\"PROVĚRKA KLIENTA - PARAMETRY\", \"\", \"\", \"\", \"\"],\n        [\"\", \"\", \"\", \"\", \"\"],\n        [\"První den účetního období:\", formatDateCz(data.accountingPeriodStart), \"\", \"\", \"\"],\n        [\"Použité limity:\", evaluationResults.thresholdVersion, \"\", \"\", \"\"],\n        [\"\", \"\", \"\", \"\", \"\"],\n        [\"FINANČNÍ ÚDAJE\", \"\", \"\", \"\", \"\"],\n        [\"\", data.years.y3, data.years.y2, data.years.y1, data.years.y0],\n        [\"Aktiva (Kč)\", data.aktiva.y3, data.aktiva.y2, data.aktiva.y1, data.aktiva.y0],\n        [\"Obrat (Kč)\", data.obrat.y3, data.obrat.y2, data.obrat.y1, data.obrat.y0],\n        [\"Průměrný počet zaměstnanců\", data.zamestnanci.y3, data.zamestnanci.y2, data.zamestnanci.y1, data.zamestnanci.y0],\n        [\"\", \"\", \"\", \"\", \"\"],\n        [\"ZDROJE DAT\", \"\", \"\", \"\", \"\"],\n        [`Rok ${data.years.y3}:`, data.zdroje.y3 || 'N/A', \"\", \"\", \"\"],\n        [`Rok ${data.years.y2}:`, data.zdroje.y2 || 'N/A', \"\", \"\", \"\"],\n        [`Rok ${data.years.y1}:`, data.zdroje.y1 || 'N/A', \"\", \"\", \"\"],\n        [`Rok ${data.years.y0}:`, data.zdroje.y0 || 'N/A', \"\", \"\", \"\"],\n        [\"\", \"\", \"\", \"\", \"\"],\n        [\"VYHODNOCENÍ (kategorie dle roku)\", \"Velikost účetní jednotky\", \"Povinnost auditu:\", \"\", \"\"],\n        [\"Rok \" + data.years.y3 + \":\", evaluationResults.categories.y3 || '—', auditObligation.y3, \"\", \"\"],\n        [\"Rok \" + data.years.y2 + \":\", evaluationResults.categories.y2 || '—', auditObligation.y2, \"\", \"\"],\n        [\"Rok \" + data.years.y1 + \":\", evaluationResults.categories.y1 || '—', auditObligation.y1, \"\", \"\"],\n        [\"Rok \" + data.years.y0 + \":\", evaluationResults.categories.y0 || '—', auditObligation.y0, \"\", \"\"],\n        [\"\", \"\", \"\", \"\", \"\"],\n        [\"Datum vytvoření:\", new Date().toLocaleString(\"cs-CZ\"), \"\", \"\", \"\"]\n      ];\n      \n      // Insert official category and audit rows\n      parameters.push([\"\", \"\", \"\", \"\", \"\"]);\n      parameters.push([\"Pro kontrolovaný rok účetní jednotka je vnímána za:\", getOfficialCategory(evaluationResults.categories), officialAudit, \"\", \"\"]);\n      // Add unit info rows\n      parameters.unshift([\"\", \"\", \"\", \"\", \"\"]);\n      parameters.unshift([\"KONTROLOVANÁ ÚČETNÍ JEDNOTKA\", \"\", \"\", \"\", \"\"]);\n      parameters.unshift([\"Typ:\", data.unitType, \"\", \"\", \"\"]);\n      parameters.unshift([\"IČO:\", data.unitICO, \"\", \"\", \"\"]);\n      parameters.unshift([\"Název:\", data.unitName, \"\", \"\", \"\"]);\n      // Use selected cell as starting point\n      const startRow = selectedStartCell.rowIndex;\n      const startCol = selectedStartCell.columnIndex;\n      // Insert data\n      const range = sheet.getRangeByIndexes(startRow, startCol, parameters.length, 5);\n      range.values = parameters;\n      // Format section header (KONTROLOVANÁ ÚČETNÍ JEDNOTKA)\n      const unitHeaderRange = sheet.getRangeByIndexes(startRow + 3, startCol, 1, 2);\n      unitHeaderRange.format.font.bold = true;\n      unitHeaderRange.format.fill.color = \"#e0e0e0\";\n      \n      // Format section headers (PROVĚRKA KLIENTA, FINANČNÍ ÚDAJE, ZDROJE DAT, VYHODNOCENÍ)\n      const proverkaHeader = sheet.getRangeByIndexes(startRow + 5, startCol, 1, 5);\n      proverkaHeader.format.font.bold = true;\n      proverkaHeader.format.font.size = 14;\n      proverkaHeader.format.fill.color = \"#1CB5A6\";\n      proverkaHeader.format.font.color = \"white\";\n      \n      const financialHeader = sheet.getRangeByIndexes(startRow + 10, startCol, 1, 5);\n      financialHeader.format.font.bold = true;\n      financialHeader.format.font.size = 14;\n      financialHeader.format.fill.color = \"#1CB5A6\";\n      financialHeader.format.font.color = \"white\";\n      \n      const zdrojeHeader = sheet.getRangeByIndexes(startRow + 16, startCol, 1, 5);\n      zdrojeHeader.format.font.bold = true;\n      zdrojeHeader.format.font.size = 14;\n      zdrojeHeader.format.fill.color = \"#1CB5A6\";\n      zdrojeHeader.format.font.color = \"white\";\n      \n      const vyhodnoceniHeader = sheet.getRangeByIndexes(startRow + 22, startCol, 1, 3);\n      vyhodnoceniHeader.format.font.bold = true;\n      vyhodnoceniHeader.format.font.size = 14;\n      vyhodnoceniHeader.format.fill.color = \"#1CB5A6\";\n      vyhodnoceniHeader.format.font.color = \"white\";\n      \n      // Format data table header (Years row)\n      const tableHeaderRange = sheet.getRangeByIndexes(startRow + 11, startCol, 1, 5);\n      tableHeaderRange.format.font.bold = true;\n      tableHeaderRange.format.fill.color = \"#e0e0e0\";\n      \n      // Format Aktiva row (accounting format without decimals)\n      const aktivaRange = sheet.getRangeByIndexes(startRow + 12, startCol + 1, 1, 4);\n      aktivaRange.numberFormat = [[\"#,##0\"]];\n      \n      // Format Obrat row (accounting format without decimals)\n      const obratRange = sheet.getRangeByIndexes(startRow + 13, startCol + 1, 1, 4);\n      obratRange.numberFormat = [[\"#,##0\"]];\n      \n      // Format Zaměstnanci row (accounting format without decimals)\n      const zamestnanciRange = sheet.getRangeByIndexes(startRow + 14, startCol + 1, 1, 4);\n      zamestnanciRange.numberFormat = [[\"#,##0\"]];\n      // Auto-fit columns\n      range.format.autofitColumns();\n      \n      await context.sync();\n      \n      showNotification(\"Parametry byly úspěšně vytištěny do listu\", \"success\");\n    });\n  } catch (error) {\n    console.error(\"Error printing parameters:\", error);\n    showNotification(\"Chyba při tisku parametrů: \" + error.message, \"error\");\n  }\n}\n"],"names":["showNotification","message","type","console","log","toUpperCase","notification","document","getElementById","createElement","id","className","body","appendChild","textContent","classList","remove","setTimeout","add","formatNumber","value","decimals","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","restartTool","yearDataStore","y3","y2","y1","y0","evaluationResults","selectedStartCell","currentYear","Date","getFullYear","updateYearLabels","updateButtonStates","currentEditingYear","formatNumberWithSpaces","num","toString","replace","formatDateCz","iso","y","m","d","split","map","v","parseInt","periodInput","year","month","day","prefix","updateDataSummary","openYearModal","yearKey","yearValue","data","aktiva","obrat","zamestnanci","zdroj","closeYearModal","saveYearData","aktivaStr","obratStr","zamestnanciStr","parseFloat","trim","forEach","index","button","status","summaryHtml","key","yearNum","innerHTML","evaluateData","accountingPeriodStart","unitName","unitType","unitICO","years","zdroje","getFormValues","validateData","oldThresholds","micro","small","medium","newThresholds","classifyOne","zam","thresholds","aktTis","obrTis","zamVal","exceeds","categories","useOldThresholds","thresholdVersion","results","auditObligation","evaluateAuditObligation","officialAudit","getOfficialAuditObligation","html","getOfficialCategory","displayResults","keys","k","filter","Boolean","length","i","auditLimitsOld","auditLimitsNew","oneCriteriaTypes","limits","count","includes","async","selectCellForPrint","Excel","run","range","context","workbook","getSelectedRange","load","sync","address","rowIndex","columnIndex","endRowIndex","endColumnIndex","startCol","getColumnLetter","endCol","rangeText","error","letter","String","fromCharCode","Math","floor","printParameters","sheet","worksheets","getActiveWorksheet","parameters","toLocaleString","push","unshift","startRow","getRangeByIndexes","values","unitHeaderRange","font","bold","fill","color","proverkaHeader","size","financialHeader","zdrojeHeader","vyhodnoceniHeader","tableHeaderRange","numberFormat","autofitColumns","Office","onReady","info","host","HostType","style","display","onclick","window","location","href","addEventListener","e","target","querySelectorAll","field","isNaN","initialize"],"sourceRoot":""}